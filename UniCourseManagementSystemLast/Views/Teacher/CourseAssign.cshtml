@using UniversityCourseResultManagementSystemWebApp.Models
@model CourseAssign
@{
    ViewBag.Title = "Add Assign Course";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .field-validation-error {
        color: #ff0000;
        font-weight: bold;
        padding-left: 20%;
    }

    .alert-success {
        display: none;
    }
</style>

<div class="row">
    <div class="col-xs-12">
        <div class="widget-box">
            <div class="widget-header">
                <h4 class="widget-title">Course Assign To Teacher</h4>
                <div class="widget-toolbar">
                    <a href="#" data-action="collapse">
                        <i class="ace-icon fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

                <div class="widget-body">
                    <div class="widget-main">
                        @using (Html.BeginForm("CourseAssign", "Teacher", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.ValidationSummary(true)
                            <!--?? ei div ta diye show koranor kaj korsi...div start............class label ja ase shb bootstrap er-->
                            <div class="alert alert-success">
                                <a href="#" class="close" data-dismiss="alert" aria-label="close">×</a>
                                <p>@ViewBag.ValidationMsg</p>
                            </div>
                            <!--?? div end-->
                            
                            <div class="row">
                                <div class="col-xs-12">
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Department 
                                        </label>
                                        <div class="col-sm-10">
                                            @Html.DropDownListFor(c => c.DepartmentId, ViewBag.Departments as IEnumerable<SelectListItem>, "Select Department", new { @name = "departmentId", @id = "departmentId" })
                                        </div>
                                        <div>
                                            @Html.ValidationMessageFor(c=>c.DepartmentId)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Teacher 
                                        </label>
                                        <div class="col-sm-10">
                                            @if(ViewBag.Teachers != null)
                                            {
                                                @Html.DropDownList("TeacherId", ViewBag.Teachers as IEnumerable<SelectListItem>, "Select Teacher", new { @name = "teacherId", @id = "teacherId" })

                                            }
                                            else
                                            {
                                                @Html.DropDownList("TeacherId", new SelectList(string.Empty, "Value", "Text"), "Select Teacher", new { @name = "teacherId", @id = "teacherId" })

                                            }
                                            @*@Html.DropDownListFor(c => c.TeacherId, new SelectList(string.Empty, "Value", "Text"), new { @name = "teacherId", @id = "teacherId" })*@
                                        </div>
                                        <div>
                                            @Html.ValidationMessageFor(c => c.TeacherId)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Credit to be Taken
                                        </label>
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(c => @Model.CreditTaken, "{0:n2}", new { @name = "creditTaken", @id = "creditTaken", @readonly = true })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Remaining Credit
                                        </label>
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(c => @Model.RemainingCredit, "{0:n2}", new { @name = "remainingCredit", @id = "remainingCredit", @readonly = true })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Course Code
                                        </label>
                                        <div class="col-sm-10">
                                            @if (ViewBag.Courses != null)
                                            {
                                                @Html.DropDownList("CourseId", ViewBag.Courses as IEnumerable<SelectListItem>, "Select Course", new { @name = "courseId", @id = "courseId" })

                                            }
                                            else
                                            {
                                                @Html.DropDownList("CourseId", new SelectList(string.Empty, "Value", "Text"), "Select Course", new { @name = "courseId", @id = "courseId" })

                                            }
                                            @*@Html.DropDownListFor(c => c.CourseId, new SelectList(string.Empty, "Value", "Text"), new { @name = "courseId", @id = "courseId" })*@
                                        </div>
                                        <div>
                                            @Html.ValidationMessageFor(c => c.CourseId)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Name
                                        </label>
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(c => @Model.CourseName, new { @name = "courseName", @id = "courseName", @readonly = true })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                                            Credit
                                        </label>
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(c => @Model.CourseCredit,"{0:n2}", new { @name = "courseCredit", @id = "courseCredit", @readonly = true })
                                        </div>
                                    </div>

                                    <div class="clearfix form-actions text-center">
                                        <button type="submit" id="submit" name="submit"class="btn btn-sm btn-success" ><i class="fa fa-floppy-o bigger-110"></i> Assign </button>
                                        <a class="btn btn-sm btn-warning" href="">
                                            <i class="fa fa-arrow-left bigger-110"></i>
                                            Refresh
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

@section scripts{
    

    <script>
        $(document).ready(function() {

            $("#departmentId").change(function() {

                var departmentId = $("#departmentId").val();
                if (departmentId !== 0) {
                    $("#teacherId").empty();
                    $("#courseId").empty();
                    var json = { departmentId: departmentId };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetTeachersByDepartmentId", "Teacher")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),

                        dataType: "json",


                        success: function(data) {
                            //alert(data);
                            $("#teacherId").find("option").not(":first").remove();


                            $("#creditTaken").val("");

                            $("#remainingCredit").val("");

                            $("#courseName").val("");

                            $("#courseCredit").val("");
                            $("#teacherId").append('<option value=' + 0 + '>' + "Select Teacher" + '</option>');
                            $.each(data,
                                function(key, value) {
                                    $("#teacherId").append('<option value=' +
                                        value.TeacherId +
                                        '>' +
                                        value.TeacherName +
                                        '</option>');


                                });
                        }
                    });


                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetCoursesByDepartmentId", "Teacher")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(json),
                        dataType: "json",


                        success: function(data) {


                            $("#courseId").find("option").not(":first").remove();

                            $("#creditTaken").val("");

                            $("#remainingCredit").val("");

                            $("#courseName").val("");

                            $("#courseCredit").val("");

                            $("#courseId").append('<option value=' + 0 + '>' + "Select Course" + '</option>');
                            $.each(data,
                                function(key, value) {
                                    $("#courseId").append('<option value=' +
                                        value.CourseId +
                                        '>' +
                                        value.CourseCode +
                                        '</option>');


                                });
                        }
                    });
                }
                if (departmentId === "") {
                    $("#teacherId").find("option").not(":first").remove();

                    $("#courseId").find("option").not(":first").remove();

                    $("#creditTaken").val("");

                    $("#remainingCredit").val("");

                    $("#courseName").val("");

                    $("#courseCredit").val("");


                }
            });

            $("#teacherId").change(function() {
                var teacherId = $("#teacherId").val();
                if (teacherId !== 0) {
                    var jsonNew = { teacherId: teacherId };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetTeachersByTeacherId", "Teacher")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(jsonNew),
                        dataType: "json",

                        success: function(data) {
                            //alert(data);

                            $("#creditTaken").val(data.CreditTaken);
                            //alert(data.CreditTaken);
                            $("#remainingCredit").val(data.RemainingCredit);

                        }
                    });
                }
                if (teacherId ==="0") {
                    $("#creditTaken").val("");

                    $("#remainingCredit").val("");

                }

            });

            $("#courseId").change(function() {
                var courseId = $("#courseId").val();
                if (courseId !== 0) {
                    var jsonNew = { courseId: courseId };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetCoursesByCourseId", "Teacher")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(jsonNew),
                        dataType: "json",

                        success: function(data) {
                            //alert(data);

                            $("#courseName").val(data.CourseName);
                            //alert(data.CreditTaken);
                            $("#courseCredit").val(data.CourseCredit);
                        }
                    });
                }
                if (courseId === "0") {
                    $("#courseName").val("");

                    $("#courseCredit").val("");

                }
            });

            $("#submit").click(function () {
              


                //alert("Successfull.");

               if ($("#remainingCredit").val() - $("#courseCredit").val() < 0) {
                   //alert($("#remainingCredit").val() - $("#courseCredit").val());
                    var r = confirm("Are you sure?");
                    if (r == true) {
                        var url = '@Url.Action("CourseAssign", "Teacher")';
                        window.location.href = url;
                      
                        return true;
                    }
                    return false;

                }

                @*var url = '@Url.Action("CourseAssign", "Teacher")';
                window.location.href = url;*@
                @*if (ViewBag.ValidationMsg != null) {
                        alert("@ViewBag.ValidationMsg");
                    }*@
            });

        });
    </script>
    
   @if (ViewBag.ValidationMsg != null)
   {

        <script>
            $(document).ready(function () {
                // Place a value into localStorage, j kno 1ta random value set kortsi jate always true er mto hoy
                localStorage.setItem("loadedEarlier", "yes");

                // Check to see if this is a page reload or not by seeing if a value was placed // into localStorage from a previous page load
                if (localStorage.getItem("loadedEarlier")) {
                    // Page has already loaded earlier
                    $(".alert-success").css("display", "block"); // jetar display none kore hide korsilam oita ekhn show hbe
                }

                // save change button click korle page load hbe,
                //then loadearlier e reload er ager value pabe,
                //mane condition true, so show korbe
                /*$("#tabSubmit").click(function () {
                    location.reload();
                });*/
            });
        </script>
    }
    
}
          
